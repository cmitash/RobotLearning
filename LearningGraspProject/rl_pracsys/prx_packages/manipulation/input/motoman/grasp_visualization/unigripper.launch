
<launch>  
  <rosparam file="$(find prx_input)/templates/spaces/space_types.yaml"/>

  <rosparam ns="simulation" file="$(find prx_input)/templates/applications/empty_application.yaml" />
  <rosparam ns="simulation" file="$(find prx_input)/templates/simulators/default_simulator.yaml"/>  
  <rosparam ns="simulation/simulator/subsystems/consumer/subsystems/manipulator" file="$(find manipulation)/input/motoman/unigripper.yaml"/>

  <rosparam ns="simulation/simulator/obstacles" file="$(find manipulation)/input/shelf.yaml"/>
  
  <rosparam ns="simulation/simulator/obstacles" command="load" file="$(find manipulation)/input/motoman/grasp_visualization/database_fusion_constraints.yaml" />
  <rosparam ns="simulation/simulator/subsystems/consumer/subsystems/crayola_64_ct" file="$(find manipulation)/input/objects/apc_items/crayola_64_ct.yaml" />

  <rosparam ns="simulation/application">
  start_simulation: false
  </rosparam>
  <rosparam ns="simulation/simulator">
  collision_detection: true
  collision_response: false
  </rosparam>

  <rosparam ns="simulation/simulator/subsystems/consumer">
    type: grasp_visualizer
    grasp_path: "prx_packages/manipulation/input/grasp_data/unigripper_24_fixed/"
    # object_poses:
    #   - pose: [1.06 0 1.38 0 0 0 1]
    #   - pose: [1.06 0 1.38 0 0 0.38268 0.92388]
    #   - pose: [1.065 0 1.34 .707107 0 0 .707107]
    #   - pose: [1.06 0 1.15 0 0 0 1]
    #   - pose: [1.06 0 1.15 0 0 0.38268 0.92388]
    #   - pose: [1.065 0 1.11 .707107 0 0 .707107]
  </rosparam>
  <rosparam ns="simulation/simulator/subsystems/consumer/subsystems/manipulator">
    initial_state: [-0.205,-0.000,0.028,-0.000,0.000,-0.000,1.000,1.000]
  </rosparam>
  <rosparam ns="simulation/simulator/subsystems/consumer/subsystems/crayola_64_ct">
    initial_state: [1.14 0 1.13 0 0 0 1]
  </rosparam>

  <node name="simulation" pkg="prx_simulation" type="prx_simulation" required="true" launch-prefix="" output="screen" args="simulation"/>

  <include file="$(find prx_input)/templates/visualization/visualization.launch"/>

  <rosparam ns="visualization/viewer/">
    windows:
      window_1:
        xpos: 920
        ypos: 100
        width: 800
        height: 800
        cameras:
          perspective:
            ortho: false
            camera_type: 0
            eye: [0, 0, 1.8]
            center: [1, 0, 0]
            speed: {move: 0.1, rotate: 0.001}
          orthographic:
            ortho: true
            ortho_param:
              left: -300
              right: 300
              bottom: -300
              top: 300
              zNear: 0
              zFar: 1000
            speed: {move: 0.2, rotate: 0.001}
          smooth:
            ortho: false
            camera_type: 2
            eye: [0, -20, 15]
            center: [0, 1, 18]
            speed: {move: 0.2, rotate: 0.001}
  </rosparam>

</launch>

<!--
<launch>  
  <rosparam command="load" file="$(find prx_input)/templates/spaces/space_types.yaml"/>

  <rosparam ns="simulation" command="load" file="$(find prx_input)/templates/applications/empty_application.yaml" />
  <rosparam ns="simulation" command="load" file="$(find manipulation)/input/manipulation_simulator.yaml"/>  
  <rosparam command="load" ns="simulation/simulator/subsystems/consumer" file="$(find prx_input)/templates/controllers/consumer.yaml"/>
  <rosparam command="load" ns="simulation/simulator/subsystems/consumer/subsystems/manipulator" file="$(find manipulation)/input/motoman/unigripper.yaml"/>


  <rosparam ns="simulation/simulator/obstacles" command="load" file="$(find manipulation)/input/motoman/test_cases/enclosed_cubby.yaml" />

  <rosparam command="load" ns="simulation/simulator/subsystems/box1" file="$(find manipulation)/input/motoman/test_cases/target_box.yaml" />


  <rosparam ns="simulation/simulator/subsystems/consumer">
    keep_last_control: true
  </rosparam>

  <node name="simulation" pkg="prx_simulation" type="prx_simulation" required="true" launch-prefix="" output="screen" args="simulation"/>


  <rosparam command="load" ns="planning">
    system_mapping:
      -
        pair: [simulator/consumer/manipulator, world_model/simulator/manipulator]
      -
        pair: [simulator/box1, world_model/simulator/box1]
      -
        pair: [simulator/box2, world_model/simulator/box2]
    consumer: simulator/consumer
    # random_seed: 5646
    # random_seed: 14391835
    simulate: true
    visualize: true
    persistent: false
    consumer_mapping:
      - 
        pair: [simulator/consumer, manipulator_pc]
    world_model:
      type: manipulation_world_model
      num_ik_seeds: 10
  </rosparam>

  <rosparam command="load" ns="planning" file="$(find prx_input)/templates/spaces/space_types.yaml"/>  
  <rosparam command="load" ns="planning" file="$(find prx_input)/templates/planning_applications/single_query_application.yaml" />
  <rosparam command="load" ns="planning/world_model" file="$(find manipulation)/input/manipulation_simulator.yaml"/>  
  <rosparam command="load" ns="planning/world_model/simulator/subsystems/manipulator" file="$(find manipulation)/input/motoman/unigripper.yaml"/>
  


  <rosparam ns="planning/world_model/planning_contexts">
    manipulator_pc:
      default:
        type: "hide_mapping"
    left_full_arm:
      default:
        type: "obstacle_mapping"
      manipulation_context_info:
        full_arm_context_name: "left_full_arm"
        arm_context_name: "left_arm"
        end_effector_context_name: "left_end_effector"
        start_link: "head_base"
        end_link: "head_sponge"
    left_arm:
      default:
       type: "obstacle_mapping"
      manipulation_context_info:
        full_arm_context_name: "left_full_arm"
        arm_context_name: "left_arm"
        end_effector_context_name: "left_end_effector"
        start_link: "head_base"
        end_link: "head_sponge"
    left_arm_planning:
      default:
        type: "hide_mapping"
    left_end_effector:
      default:
       type: "hide_mapping"
  </rosparam>

  <rosparam ns="planning/world_model/simulator/subsystems/manipulator">
    planning_contexts:
      manipulator_pc:
        type: "full_mapping"
      left_full_arm:
        type: "floating_hand_full_state_mapping"
      left_arm:
        type: "floating_hand_state_mapping"
      left_end_effector:
        type: "floating_hand_gripper_state_mapping"
      left_arm_planning:
        type: "floating_hand_state_mapping"
  </rosparam>

  <rosparam ns="planning/world_model/simulator/obstacles" command="load" file="$(find manipulation)/input/motoman/test_cases/enclosed_cubby.yaml" />

  <rosparam command="load" ns="planning/world_model/simulator/subsystems/box1" file="$(find manipulation)/input/motoman/test_cases/target_box.yaml" />

  <rosparam ns="planning/task_planner/">
    type: simple_pap_tp
    full_manipulator_context_name: "manipulator_pc"
    manipulation_context_name: "left_full_arm"
    manipulation_task_planner_name: "manipulation_task_planner"
    object_name: box1
    object_target: [0.8, 0.5, 0.77, 0, 0, 0, 1]
    specification:
      type: simple_pap_specification
      validity_checker: 
        type: world_model_validity_checker
    query:
      type: motion_planning_query
      query_type: add_query_points_collisions
      goal:
        type: multiple_goal_states
        distance_metric:
          type: ann_distance_metric
    planners:
      manipulation_task_planner:
        type: manipulation_tp
        serialize_flag: true
        constraints: 
          type: null_constraints
        specification:
          type: manipulation_specification
          validity_checker:
            type: world_model_validity_checker
        query:
          type: manipulation_query
          search_mode: standard_search
          goal:
            type: multiple_goal_states
            distance_metric:
              type: ann_distance_metric
        planners:
          left_arm_motion_planner:
            type: "prm_star"
            visualization_bodies: ["simulator/manipulator/head_sponge"]
            visualize_graph: true
            visualize_solutions: false 
            visualize: false
            serialize_file: "left_arm_graph.roadmap"
            space_name: "left_arm_planning"
            planning_context_name: "left_arm"
            query:
              type: motion_planning_query
              goal:
                type: multiple_goal_states
                distance_metric:
                  type: ann_distance_metric
            specification:
              type: motion_planning_specification
              validity_checker: 
                type: world_model_validity_checker
              sampler:
                type: uniform_sampler
              distance_metric:
                type: graph_distance_metric
              local_planner:
                type: bvp_local_planner
              stopping_criteria:
                elements:
                  criterion1:
                    type: iteration_criterion
                    condition: 150
              heuristic_search:
                type: constraints_astar_search
          grasping_planner:
            type: grasping_planner
            specification:
              type: grasping_specification
              validity_checker:
                type: world_model_validity_checker
            data_folders: 
              left_full_arm: "prx_packages/manipulation/input/grasp_data/unigripper/"
  </rosparam>


  <node name="planning" pkg="prx_planning" type="prx_planning" required="false" launch-prefix="" output="screen" args="planning"/>



  <include file="$(find prx_input)/templates/visualization/visualization.launch"/>

  <rosparam ns="visualization/viewer/">
    windows:
      window_1:
        xpos: 900
        ypos: 10
        width: 1000
        height: 1000
        cameras:
          perspective:
            ortho: false
            camera_type: 0
            eye: [0, 0, 1.8]
            center: [1, 0, 0]
            speed: {move: 0.1, rotate: 0.001}
          orthographic:
            ortho: true
            ortho_param:
              left: -10
              right: 10
              bottom: -10
              top: 10
              zNear: 0
              zFar: 1000
            speed: {move: 0.2, rotate: 0.001}
          smooth:
            ortho: false
            camera_type: 2
            eye: [0, -20, 15]
            center: [0, 1, 18]
            speed: {move: 0.2, rotate: 0.001}
      window_2:
        xpos: 400
        ypos: 10
        width: 500
        height: 500
        cameras:
          perspective:
            ortho: false
            camera_type: 0
            eye: [0, 0, 1.8]
            center: [1, 0, 0]
            speed: {move: 0.1, rotate: 0.001}
  </rosparam>

</launch>
-->