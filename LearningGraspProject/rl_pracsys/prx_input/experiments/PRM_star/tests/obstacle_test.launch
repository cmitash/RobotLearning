<!-- This file has been tested on PRACSYS revision  -->

<launch>

  <rosparam command="load" file="$(find prx_input)/templates/spaces/space_types.yaml"/>

  <rosparam command="load" ns="prx/obstacles" file="$(find prx_input)/templates/environments/forest.yaml"/>

  <rosparam command="load" ns="simulation" file="$(find prx_input)/templates/applications/empty_application.yaml"/>
  <rosparam command="load" ns="simulation" file="$(find prx_input)/templates/simulators/default_simulator.yaml"/>
  <rosparam command="load" ns="simulation/controller" file="$(find prx_input)/templates/controllers/consumer.yaml"/>
  <rosparam command="load" ns="simulation/plant" file="$(find prx_input)/templates/plants/disk_rigid_body.yaml"/>
  <rosparam ns="simulation/controller">
  </rosparam>
  <rosparam command="load" ns="simulation/simulator/subsystems/consumer">
    template: "controller"
  </rosparam>
  <rosparam command="load" ns="simulation/simulator/subsystems/consumer/subsystems/disk">
    template: "plant"
    initial_state: [-80,-80,0]
  </rosparam>  
 <rosparam ns="planning">
  <!-- First define the mapping between simulation and world model plants -->
  system_mapping:
  - 
    pair: [simulator/consumer/disk, world_model/simulator/disk]

  consumer: simulator/consumer
  world_model:
    type: default_world_model
  </rosparam>
  <rosparam ns="planning/world_model/planning_contexts">
  full_space:
    default:
      type: full_mapping
  </rosparam>
  <rosparam ns="planning/world_model" command="load" file="$(find prx_input)/templates/simulators/default_simulator.yaml"/>        
  <rosparam command="load" ns="planning/world_model/simulator/subsystems/disk" file="$(find prx_input)/templates/plants/disk_rigid_body.yaml"/>
  <!-- Load the planning application -->
  <rosparam command="load" ns="planning" file="$(find prx_input)/templates/planning_applications/single_query_application.yaml"/>

  <rosparam ns="planning">
    random_seed: 34378
    consumer_mapping:
      - 
        pair: [simulator/consumer, full_space]
    visualize: true
  </rosparam>
        
       
  <rosparam command="load" ns="planning/motion_planner" file="$(find prx_input)/templates/motion_planners/prm_star.yaml"/>
 
  <rosparam command="load" ns="planning/task_planner" file="$(find prx_input)/templates/task_planners/single_shot.yaml"/>

  <rosparam ns="planning/task_planner/" >
    specification: 
      type: single_shot_specification
    query:
      type: single_shot_query
  </rosparam>

  <rosparam command="load" ns="planning/query_type" file="$(find prx_input)/templates/queries/motion_planning_query.yaml"/>
  <rosparam command="load" ns="planning/specification_type" file="$(find prx_input)/templates/specifications/motion_planning_specification.yaml"/>

  <rosparam ns="planning/task_planner/planners/" >
  planner1:
    template: "motion_planner"
    space_name: "full_space"
    visualization_bodies: ["simulator/disk/body"]
    visualize: true
    visualize_graph: true
    visualize_solutions: true        
    delta_prm: false
    specification:
      template: "specification_type" 
      heuristic_search:
        type: constraints_astar_search
      seeds:
        -
          state: [25,19,0]
        -
          state: [24,19,0]
        -
          state: [25,19,0]
        -
          state: [26,18,0]
        -
          state: [25,18,0]
        -
          state: [25,17,0]
        -
          state: [25,16,0]
      stopping_criteria:
        elements:
          criterion1:
            type: iteration_criterion
            condition: 100
    query:
      template: "query_type"
      start_state: [-80,-80,0]
      goal:
        type: "goal_state"
        distance_metric:
          type: ann_distance_metric
        goal_state: [26,19,0]
  </rosparam>
  

  <node name="planning" pkg="prx_planning" type="prx_planning" required="true" launch-prefix="gdb --args" output="screen" args="planning" />

  <node name="simulation" pkg="prx_simulation" type="prx_simulation" required="true" launch-prefix="" output="screen" args="simulation"/>
  <include file="$(find prx_input)/templates/visualization/visualization.launch"/>


</launch>
